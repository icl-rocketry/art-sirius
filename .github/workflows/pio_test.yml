name: PlatformIO Build

on:
  push:
    branches: ["main", "wally-*"]
  pull_request:
    branches: ["main", "wally-*"]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./wally/sw

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python (without dependency checks)
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          cache: 'pip'
          cache-dependency-path: '**/platformio.ini'  # Cache based on PlatformIO config instead of requirements

      - name: Cache PlatformIO
        uses: actions/cache@v3
        with:
          path: ~/.platformio
          key: ${{ runner.os }}-platformio-${{ hashFiles('platformio.ini') }}
          restore-keys: ${{ runner.os }}-platformio-
          retention-days: 14

      - name: Cache ESP32 Platform
        id: cache-esp32
        uses: actions/cache@v3
        with:
          path: ~/.platformio/platforms/espressif32
          key: ${{ runner.os }}-esp32-platform
          restore-keys: ${{ runner.os }}-esp32-platform
          retention-days: 14

      - name: Install PlatformIO
        if: steps.cache-pio.outputs.cache-hit != 'true'
        run: pip install platformio             

      - name: Install ESP32 Platform
        if: steps.cache-esp32.outputs.cache-hit != 'true'
        run: pio platform install espressif32

      - name: Build project
        run: pio run -e wally  # Build for wally environment
