# This is a basic workflow to help you get started with Actions

name: PlatformIO Build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main", "wally-*"]
  pull_request:
    branches: [ "main", "wally-*"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          cache: 'pip'

      - name: Cache PlatformIO
        uses: actions/cache@v3
        with:
          path: ~/.platformio
          key: ${{ runner.os }}-platformio-${{ hashFiles('platformio.ini') }}
          restore-keys: ${{ runner.os }}-platformio-
          retention-days: 14

      - name: Cache ESP32 Platform
        id: cache-esp32
        uses: actions/cache@v3
        with:
          path: ~/.platformio/platforms/espressif32
          key: ${{ runner.os }}-esp32-platform
          restore-keys: |
            ${{ runner.os }}-esp32-platform

      - name: Install PlatformIO
        if: steps.cache-pio.outputs.cache-hit != 'true'
        run: pip install platformio
        
      - name: Install ESP32 Platform
        if: steps.cache-esp32.outputs.cache-hit != 'true'
        run: pio platform install espressif32

      - name: Build project
        run: pio run -e wally  # Build for wally
